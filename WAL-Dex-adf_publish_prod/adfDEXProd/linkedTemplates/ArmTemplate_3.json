{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfDEXProd"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Get_Data_From_BC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Service Codes",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT  TOP 2 * FROM dbo.DEX_Site_Config  \nWHERE   SiteCode  LIKE'%US%' OR \n        SiteCode LIKE'%UK%'  ",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Site_Config",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach ServiceCode",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Service Codes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Service Codes').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get_Data_From_BC_Internal",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Get_Data_From_BC_Internal",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SiteCode": {
												"value": "@item().SiteCode",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Ecom"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-16T11:13:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Data_From_Byoma_FTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Interface Info IBWCSO",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DI.InterfaceCode, DI.[Enabled], DI.[Type], DI.[Direction], DI.[FTPDropDir], DI.FTPProcessedDir \nFROM dbo.DEX_Interface DI\nWHERE InterfaceCode = 'IBWCSO'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Interface",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "GET WC Order Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Interface Info IBWCSO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Byoma_SFTP",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "For Each Order File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET WC Order Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET WC Order Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load_Interface_Files_From_WC",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Load_Interface_Files_From_WC]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Tab_DEX_Interface_Files",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy WC Order File to Azure Blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Load_Interface_Files_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Byoma_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_IB_Drop_Folder_Blob",
											"type": "DatasetReference",
											"parameters": {
												"Container": "/",
												"Directory": "ibdrop",
												"filename": "*"
											}
										}
									]
								},
								{
									"name": "Update_Downloaded_File_From_WC",
									"description": "Update Downloaded File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy WC Order File to Azure Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Downloaded_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Files_To_InProcess_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update_Downloaded_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibdrop",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibinprocess",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Load In Process File From Blob to Azure SQL",
									"description": "Load In Process File From Blob to Azure SQL (Interface document table)",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Files_To_InProcess_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Load_InProcess_Files_From_BS]",
										"storedProcedureParameters": {
											"ContainerName": {
												"value": "ibinprocess",
												"type": "String"
											},
											"DataSource": {
												"value": "AzureStorage",
												"type": "String"
											},
											"Direction": {
												"value": "Inbound",
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Files_To_Processed_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load In Process File From Blob to Azure SQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibinprocess",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibprocessed",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Update_Processed_File_From_WC",
									"description": "Update Processed File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Files_To_Processed_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Processed_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SFTP Move WC Orders to Processed",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update_Processed_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "SftpWriteSettings",
												"operationTimeout": "01:00:00",
												"useTempFileRename": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Byoma_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Byoma_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPProcessedDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Orders File From OBDrop",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "SFTP Move WC Orders to Processed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Byoma_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Interface Info IBPDRSHIP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "For Each Order File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DI.InterfaceCode, DI.[Enabled], DI.[Type], DI.[Direction], DI.[FTPDropDir], DI.FTPProcessedDir \nFROM dbo.DEX_Interface DI\nWHERE InterfaceCode = 'IBPDRSHIP'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Interface",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Get WC Shipment Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Interface Info IBPDRSHIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Byoma_SFTP",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FTPDropDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "For Each Shipment File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get WC Shipment Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WC Shipment Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load_Shipment_Interface_Files_From_WC",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Load_Interface_Files_From_WC]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Tab_DEX_Interface_Files",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy WC ShipmentFile to Azure Blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Load_Shipment_Interface_Files_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Byoma_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_IB_Drop_Folder_Blob",
											"type": "DatasetReference",
											"parameters": {
												"Container": "/",
												"Directory": "ibdrop",
												"filename": "*"
											}
										}
									]
								},
								{
									"name": "Update_Downloaded_Shipment_File_From_WC",
									"description": "Update Downloaded File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy WC ShipmentFile to Azure Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Downloaded_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Shipment_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Shipment_Files_To_InProcess_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update_Downloaded_Shipment_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibdrop",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibinprocess",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Load In Process Ship File From Blob to Azure SQL",
									"description": "Load In Process File From Blob to Azure SQL (Interface document table)",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Shipment_Files_To_InProcess_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Load_InProcess_Files_From_BS]",
										"storedProcedureParameters": {
											"ContainerName": {
												"value": "ibinprocess",
												"type": "String"
											},
											"DataSource": {
												"value": "AzureStorage",
												"type": "String"
											},
											"Direction": {
												"value": "Inbound",
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Shipment_Files_To_Processed_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load In Process Ship File From Blob to Azure SQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibinprocess",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibprocessed",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Update_Processed_Shipment_File_From_WC",
									"description": "Update Processed File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Shipment_Files_To_Processed_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Processed_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Shipment_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SFTP Move WC Shipment to Processed",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update_Processed_Shipment_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "SftpWriteSettings",
												"operationTimeout": "01:00:00",
												"useTempFileRename": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Byoma_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Byoma_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FTPProcessedDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Shipment File From OBDrop",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "SFTP Move WC Shipment to Processed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Byoma_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Ecom"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Data_From_IOP_FTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Interface Info IBWCSO",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DI.InterfaceCode, DI.[Enabled], DI.[Type], DI.[Direction], DI.[FTPDropDir], DI.FTPProcessedDir \nFROM dbo.DEX_Interface DI\nWHERE InterfaceCode = 'IBWCSO'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Interface",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "GET WC Order Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Interface Info IBWCSO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "IOP_WC_SFTP",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "For Each Order File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET WC Order Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET WC Order Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load_Interface_Files_From_WC",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Load_Interface_Files_From_WC]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Tab_DEX_Interface_Files",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy WC Order File to Azure Blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Load_Interface_Files_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "IOP_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_IB_Drop_Folder_Blob",
											"type": "DatasetReference",
											"parameters": {
												"Container": "/",
												"Directory": "ibdrop",
												"filename": "*"
											}
										}
									]
								},
								{
									"name": "Update_Downloaded_File_From_WC",
									"description": "Update Downloaded File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy WC Order File to Azure Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Downloaded_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Files_To_InProcess_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update_Downloaded_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibdrop",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibinprocess",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Load In Process File From Blob to Azure SQL",
									"description": "Load In Process File From Blob to Azure SQL (Interface document table)",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Files_To_InProcess_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Load_InProcess_Files_From_BS]",
										"storedProcedureParameters": {
											"ContainerName": {
												"value": "ibinprocess",
												"type": "String"
											},
											"DataSource": {
												"value": "AzureStorage",
												"type": "String"
											},
											"Direction": {
												"value": "Inbound",
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Files_To_Processed_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load In Process File From Blob to Azure SQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibinprocess",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibprocessed",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Update_Processed_File_From_WC",
									"description": "Update Processed File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Files_To_Processed_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Processed_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SFTP Move WC Orders to Processed",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update_Processed_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "SftpWriteSettings",
												"operationTimeout": "01:00:00",
												"useTempFileRename": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "IOP_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "IOP_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPProcessedDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Orders File From OBDrop",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "SFTP Move WC Orders to Processed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "IOP_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Interface Info IBPDRSHIP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "For Each Order File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DI.InterfaceCode, DI.[Enabled], DI.[Type], DI.[Direction], DI.[FTPDropDir], DI.FTPProcessedDir \nFROM dbo.DEX_Interface DI\nWHERE InterfaceCode = 'IBPDRSHIP'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Interface",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Get WC Shipment Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Interface Info IBPDRSHIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "IOP_WC_SFTP",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FTPDropDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "For Each Shipment File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get WC Shipment Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WC Shipment Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load_Shipment_Interface_Files_From_WC",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Load_Interface_Files_From_WC]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Tab_DEX_Interface_Files",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy WC ShipmentFile to Azure Blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Load_Shipment_Interface_Files_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "IOP_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_IB_Drop_Folder_Blob",
											"type": "DatasetReference",
											"parameters": {
												"Container": "/",
												"Directory": "ibdrop",
												"filename": "*"
											}
										}
									]
								},
								{
									"name": "Update_Downloaded_Shipment_File_From_WC",
									"description": "Update Downloaded File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy WC ShipmentFile to Azure Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Downloaded_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Shipment_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Shipment_Files_To_InProcess_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update_Downloaded_Shipment_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibdrop",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibinprocess",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Load In Process Ship File From Blob to Azure SQL_copy1",
									"description": "Load In Process File From Blob to Azure SQL (Interface document table)",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Shipment_Files_To_InProcess_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Load_InProcess_Files_From_BS]",
										"storedProcedureParameters": {
											"ContainerName": {
												"value": "ibinprocess",
												"type": "String"
											},
											"DataSource": {
												"value": "AzureStorage",
												"type": "String"
											},
											"Direction": {
												"value": "Inbound",
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Shipment_Files_To_Processed_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load In Process Ship File From Blob to Azure SQL_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibinprocess",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibprocessed",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Update_Processed_Shipment_File_From_WC",
									"description": "Update Processed File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Shipment_Files_To_Processed_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Processed_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Shipment_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SFTP Move WC Shipment to Processed",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update_Processed_Shipment_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "SftpWriteSettings",
												"operationTimeout": "01:00:00",
												"useTempFileRename": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "IOP_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "IOP_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FTPProcessedDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Shipment File From OBDrop",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "SFTP Move WC Shipment to Processed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "IOP_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Ecom"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Data_From_Tanluxe_FTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Interface Info IBWCSO",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DI.InterfaceCode, DI.[Enabled], DI.[Type], DI.[Direction], DI.[FTPDropDir], DI.FTPProcessedDir \nFROM dbo.DEX_Interface DI\nWHERE InterfaceCode = 'IBWCSO'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Interface",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "GET WC Order Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Interface Info IBWCSO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Tanluxe_WC_SFTP",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "For Each Order File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET WC Order Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET WC Order Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load_Interface_Files_From_WC",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Load_Interface_Files_From_WC]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Tab_DEX_Interface_Files",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy WC Order File to Azure Blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Load_Interface_Files_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Tanluxe_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_IB_Drop_Folder_Blob",
											"type": "DatasetReference",
											"parameters": {
												"Container": "/",
												"Directory": "ibdrop",
												"filename": "*"
											}
										}
									]
								},
								{
									"name": "Update_Downloaded_File_From_WC",
									"description": "Update Downloaded File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy WC Order File to Azure Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Downloaded_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Files_To_InProcess_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update_Downloaded_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibdrop",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibinprocess",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Load In Process File From Blob to Azure SQL",
									"description": "Load In Process File From Blob to Azure SQL (Interface document table)",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Files_To_InProcess_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Load_InProcess_Files_From_BS]",
										"storedProcedureParameters": {
											"ContainerName": {
												"value": "ibinprocess",
												"type": "String"
											},
											"DataSource": {
												"value": "AzureStorage",
												"type": "String"
											},
											"Direction": {
												"value": "Inbound",
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Files_To_Processed_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load In Process File From Blob to Azure SQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibinprocess",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibprocessed",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Update_Processed_File_From_WC",
									"description": "Update Processed File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Files_To_Processed_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Processed_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SFTP Move WC Orders to Processed",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update_Processed_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "SftpWriteSettings",
												"operationTimeout": "01:00:00",
												"useTempFileRename": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Tanluxe_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Tanluxe_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPProcessedDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Orders File From OBDrop",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "SFTP Move WC Orders to Processed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Tanluxe_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Interface Info IBPDRSHIP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "For Each Order File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DI.InterfaceCode, DI.[Enabled], DI.[Type], DI.[Direction], DI.[FTPDropDir], DI.FTPProcessedDir \nFROM dbo.DEX_Interface DI\nWHERE InterfaceCode = 'IBPDRSHIP'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Interface",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Get WC Shipment Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Interface Info IBPDRSHIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Tanluxe_WC_SFTP",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FTPDropDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "For Each Shipment File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get WC Shipment Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WC Shipment Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load_Shipment_Interface_Files_From_WC",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Load_Interface_Files_From_WC]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Tab_DEX_Interface_Files",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy WC ShipmentFile to Azure Blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Load_Shipment_Interface_Files_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Tanluxe_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_IB_Drop_Folder_Blob",
											"type": "DatasetReference",
											"parameters": {
												"Container": "/",
												"Directory": "ibdrop",
												"filename": "*"
											}
										}
									]
								},
								{
									"name": "Update_Downloaded_Shipment_File_From_WC",
									"description": "Update Downloaded File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy WC ShipmentFile to Azure Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Downloaded_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Shipment_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Shipment_Files_To_InProcess_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update_Downloaded_Shipment_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibdrop",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibinprocess",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Load In Process Ship File From Blob to Azure SQL_copy1",
									"description": "Load In Process File From Blob to Azure SQL (Interface document table)",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Shipment_Files_To_InProcess_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Load_InProcess_Files_From_BS]",
										"storedProcedureParameters": {
											"ContainerName": {
												"value": "ibinprocess",
												"type": "String"
											},
											"DataSource": {
												"value": "AzureStorage",
												"type": "String"
											},
											"Direction": {
												"value": "Inbound",
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Shipment_Files_To_Processed_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load In Process Ship File From Blob to Azure SQL_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibinprocess",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibprocessed",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Update_Processed_Shipment_File_From_WC",
									"description": "Update Processed File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Shipment_Files_To_Processed_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Processed_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Shipment_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SFTP Move WC Shipment to Processed",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update_Processed_Shipment_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "SftpWriteSettings",
												"operationTimeout": "01:00:00",
												"useTempFileRename": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Tanluxe_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Tanluxe_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FTPProcessedDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Shipment File From OBDrop",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "SFTP Move WC Shipment to Processed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Tanluxe_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Ecom"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Data_From_Tanologist_FTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Interface Info IBWCSO",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DI.InterfaceCode, DI.[Enabled], DI.[Type], DI.[Direction], DI.[FTPDropDir], DI.FTPProcessedDir \nFROM dbo.DEX_Interface DI\nWHERE InterfaceCode = 'IBWCSO'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Interface",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "GET WC Order Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Interface Info IBWCSO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Tanologist_SFTP",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "For Each Order File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET WC Order Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET WC Order Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load_Interface_Files_From_WC",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Load_Interface_Files_From_WC]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Tab_DEX_Interface_Files",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy WC Order File to Azure Blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Load_Interface_Files_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Tanologist_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_IB_Drop_Folder_Blob",
											"type": "DatasetReference",
											"parameters": {
												"Container": "/",
												"Directory": "ibdrop",
												"filename": "*"
											}
										}
									]
								},
								{
									"name": "Update_Downloaded_File_From_WC",
									"description": "Update Downloaded File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy WC Order File to Azure Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Downloaded_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Files_To_InProcess_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update_Downloaded_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibdrop",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibinprocess",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Load In Process File From Blob to Azure SQL",
									"description": "Load In Process File From Blob to Azure SQL (Interface document table)",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Files_To_InProcess_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Load_InProcess_Files_From_BS]",
										"storedProcedureParameters": {
											"ContainerName": {
												"value": "ibinprocess",
												"type": "String"
											},
											"DataSource": {
												"value": "AzureStorage",
												"type": "String"
											},
											"Direction": {
												"value": "Inbound",
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Files_To_Processed_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load In Process File From Blob to Azure SQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibinprocess",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibprocessed",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Update_Processed_File_From_WC",
									"description": "Update Processed File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Files_To_Processed_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Processed_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SFTP Move WC Orders to Processed",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update_Processed_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "SftpWriteSettings",
												"operationTimeout": "01:00:00",
												"useTempFileRename": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Tanologist_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Tanologist_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPProcessedDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Orders File From OBDrop",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "SFTP Move WC Orders to Processed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Tanologist_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCSO').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Interface Info IBPDRSHIP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "For Each Order File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DI.InterfaceCode, DI.[Enabled], DI.[Type], DI.[Direction], DI.[FTPDropDir], DI.FTPProcessedDir \nFROM dbo.DEX_Interface DI\nWHERE InterfaceCode = 'IBPDRSHIP'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Interface",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Get WC Shipment Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Interface Info IBPDRSHIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Tanologist_SFTP",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FTPDropDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "For Each Shipment File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get WC Shipment Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WC Shipment Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load_Shipment_Interface_Files_From_WC",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Load_Interface_Files_From_WC]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Tab_DEX_Interface_Files",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy WC ShipmentFile to Azure Blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Load_Shipment_Interface_Files_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Tanologist_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_IB_Drop_Folder_Blob",
											"type": "DatasetReference",
											"parameters": {
												"Container": "/",
												"Directory": "ibdrop",
												"filename": "*"
											}
										}
									]
								},
								{
									"name": "Update_Downloaded_Shipment_File_From_WC",
									"description": "Update Downloaded File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy WC ShipmentFile to Azure Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Downloaded_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Shipment_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Shipment_Files_To_InProcess_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update_Downloaded_Shipment_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibdrop",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibinprocess",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Load In Process Ship File From Blob to Azure SQL_copy1",
									"description": "Load In Process File From Blob to Azure SQL (Interface document table)",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Shipment_Files_To_InProcess_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Load_InProcess_Files_From_BS]",
										"storedProcedureParameters": {
											"ContainerName": {
												"value": "ibinprocess",
												"type": "String"
											},
											"DataSource": {
												"value": "AzureStorage",
												"type": "String"
											},
											"Direction": {
												"value": "Inbound",
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Shipment_Files_To_Processed_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load In Process Ship File From Blob to Azure SQL_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibinprocess",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibprocessed",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Update_Processed_Shipment_File_From_WC",
									"description": "Update Processed File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Shipment_Files_To_Processed_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Processed_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Shipment_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SFTP Move WC Shipment to Processed",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update_Processed_Shipment_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "SftpWriteSettings",
												"operationTimeout": "01:00:00",
												"useTempFileRename": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Tanologist_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Tanologist_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FTPProcessedDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Shipment File From OBDrop",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "SFTP Move WC Shipment to Processed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Tanologist_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBPDRSHIP').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Ecom"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Ecom_Data_From_BC_ILG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Service Codes_ILG",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\n SELECT  TOP 1 * FROM dbo.DEX_Site_Config  \n WHERE   SiteCode LIKE'%EU%'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Site_Config",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach ServiceCode_ILG",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Service Codes_ILG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Service Codes_ILG').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get_Ecom_Data_From_BC_ILG",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Get_Ecom_Data_From_BC_Internal_ILG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SiteCode": {
												"value": "@item().SiteCode",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Ecom"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-16T11:13:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Rec_Data_From_Byoma_FTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Interface Info IBWCREC",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DI.InterfaceCode, DI.[Enabled], DI.[Type], DI.[Direction], DI.[FTPDropDir], DI.FTPProcessedDir \nFROM dbo.DEX_Interface DI\nWHERE InterfaceCode = 'IBWCREC'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Interface",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "GET WC Order Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Interface Info IBWCREC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Byoma_SFTP",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPDropDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "For Each Order File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET WC Order Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET WC Order Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load_Interface_Files_From_WC",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Load_Interface_Files_From_WC]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Tab_DEX_Interface_Files",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy WC Order File to Azure Blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Load_Interface_Files_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Byoma_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_IB_Drop_Folder_Blob",
											"type": "DatasetReference",
											"parameters": {
												"Container": "/",
												"Directory": "ibrecdrop",
												"filename": "*"
											}
										}
									]
								},
								{
									"name": "Update_Downloaded_File_From_WC",
									"description": "Update Downloaded File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy WC Order File to Azure Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Downloaded_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Files_To_InProcess_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update_Downloaded_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibrecdrop",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibrecinprocess",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Move_Files_To_Processed_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Copy Rec Data From Blob To DB",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibrecinprocess",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibrecprocessed",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Update_Processed_File_From_WC",
									"description": "Update Processed File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Files_To_Processed_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Processed_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SFTP Move WC Orders to Processed",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update_Processed_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "SftpWriteSettings",
												"operationTimeout": "01:00:00",
												"useTempFileRename": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Byoma_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Byoma_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPProcessedDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Orders File From OBDrop",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "SFTP Move WC Orders to Processed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Byoma_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Copy Rec Data From Blob To DB",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Move_Files_To_InProcess_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"additionalColumns": [
												{
													"name": "SiteCode",
													"value": {
														"value": "@{substring(item().name,0,indexOf(item().name,'_'))}",
														"type": "Expression"
													}
												},
												{
													"name": "Direction",
													"value": {
														"value": "Inbound",
														"type": "Expression"
													}
												},
												{
													"name": "CreatedOn",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												},
												{
													"name": "FileName",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "InterfaceCode",
													"value": {
														"value": "IBWCREC",
														"type": "Expression"
													}
												},
												{
													"name": "MessageType",
													"value": {
														"value": "Recon",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['Order_Date']"
													},
													"sink": {
														"name": "Order_Date",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['Order_Status']"
													},
													"sink": {
														"name": "Order_Status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Order_Number']"
													},
													"sink": {
														"name": "Order_Number",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['SiteCode']"
													},
													"sink": {
														"name": "SiteCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['Direction']"
													},
													"sink": {
														"name": "Direction",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['CreatedOn']"
													},
													"sink": {
														"name": "CreatedOn",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['FileName']"
													},
													"sink": {
														"name": "FileName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['InterfaceCode']"
													},
													"sink": {
														"name": "InterfaceCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['MessageType']"
													},
													"sink": {
														"name": "MessageType",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['Orders']['Order']"
										}
									},
									"inputs": [
										{
											"referenceName": "Storage_IB_Rec_Drop_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Container": "ibrecinprocess",
												"Directory": "/",
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Tab_DEX_Rec_Interface_Document",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Reconciliation"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Rec_Data_From_IOP_FTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Interface Info IBWCREC",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DI.InterfaceCode, DI.[Enabled], DI.[Type], DI.[Direction], DI.[FTPDropDir], DI.FTPProcessedDir \nFROM dbo.DEX_Interface DI\nWHERE InterfaceCode = 'IBWCREC'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Interface",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "GET WC Order Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Interface Info IBWCREC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "IOP_WC_SFTP",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPDropDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "For Each Order File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET WC Order Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET WC Order Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load_Interface_Files_From_WC",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Load_Interface_Files_From_WC]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Tab_DEX_Interface_Files",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy WC Order File to Azure Blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Load_Interface_Files_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "IOP_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_IB_Drop_Folder_Blob",
											"type": "DatasetReference",
											"parameters": {
												"Container": "/",
												"Directory": "ibrecdrop",
												"filename": "*"
											}
										}
									]
								},
								{
									"name": "Update_Downloaded_File_From_WC",
									"description": "Update Downloaded File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy WC Order File to Azure Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Downloaded_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Files_To_InProcess_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update_Downloaded_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibrecdrop",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibrecinprocess",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Move_Files_To_Processed_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Copy Rec Data From Blob To DB",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibrecinprocess",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibrecprocessed",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Update_Processed_File_From_WC",
									"description": "Update Processed File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Files_To_Processed_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Processed_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SFTP Move WC Orders to Processed",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update_Processed_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "SftpWriteSettings",
												"operationTimeout": "01:00:00",
												"useTempFileRename": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "IOP_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "IOP_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPProcessedDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Orders File From OBDrop",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "SFTP Move WC Orders to Processed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "IOP_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Copy Rec Data From Blob To DB",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Move_Files_To_InProcess_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"additionalColumns": [
												{
													"name": "SiteCode",
													"value": {
														"value": "@{substring(item().name,0,indexOf(item().name,'_'))}",
														"type": "Expression"
													}
												},
												{
													"name": "Direction",
													"value": {
														"value": "Inbound",
														"type": "Expression"
													}
												},
												{
													"name": "CreatedOn",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												},
												{
													"name": "FileName",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "InterfaceCode",
													"value": {
														"value": "IBWCREC",
														"type": "Expression"
													}
												},
												{
													"name": "MessageType",
													"value": {
														"value": "Recon",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['Order_Date']"
													},
													"sink": {
														"name": "Order_Date",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['Order_Status']"
													},
													"sink": {
														"name": "Order_Status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Order_Number']"
													},
													"sink": {
														"name": "Order_Number",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['SiteCode']"
													},
													"sink": {
														"name": "SiteCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['Direction']"
													},
													"sink": {
														"name": "Direction",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['CreatedOn']"
													},
													"sink": {
														"name": "CreatedOn",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['FileName']"
													},
													"sink": {
														"name": "FileName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['InterfaceCode']"
													},
													"sink": {
														"name": "InterfaceCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['MessageType']"
													},
													"sink": {
														"name": "MessageType",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['Orders']['Order']"
										}
									},
									"inputs": [
										{
											"referenceName": "Storage_IB_Rec_Drop_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Container": "ibrecinprocess",
												"Directory": "/",
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Tab_DEX_Rec_Interface_Document",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Reconciliation"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Rec_Data_From_Tanluxe_FTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Interface Info IBWCREC",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DI.InterfaceCode, DI.[Enabled], DI.[Type], DI.[Direction], DI.[FTPDropDir], DI.FTPProcessedDir \nFROM dbo.DEX_Interface DI\nWHERE InterfaceCode = 'IBWCREC'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Interface",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "GET WC Order Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Interface Info IBWCREC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Tanluxe_WC_SFTP",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPDropDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "For Each Order File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET WC Order Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET WC Order Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load_Interface_Files_From_WC",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Load_Interface_Files_From_WC]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Tab_DEX_Interface_Files",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy WC Order File to Azure Blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Load_Interface_Files_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Tanluxe_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_IB_Drop_Folder_Blob",
											"type": "DatasetReference",
											"parameters": {
												"Container": "/",
												"Directory": "ibrecdrop",
												"filename": "*"
											}
										}
									]
								},
								{
									"name": "Update_Downloaded_File_From_WC",
									"description": "Update Downloaded File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy WC Order File to Azure Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Downloaded_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Files_To_InProcess_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update_Downloaded_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibrecdrop",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibrecinprocess",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Move_Files_To_Processed_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Copy Rec Data From Blob To DB",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibrecinprocess",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibrecprocessed",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Update_Processed_File_From_WC",
									"description": "Update Processed File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Files_To_Processed_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Processed_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SFTP Move WC Orders to Processed",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update_Processed_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "SftpWriteSettings",
												"operationTimeout": "01:00:00",
												"useTempFileRename": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Tanluxe_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Tanluxe_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPProcessedDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Orders File From OBDrop",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "SFTP Move WC Orders to Processed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Tanluxe_WC_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Copy Rec Data From Blob To DB",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Move_Files_To_InProcess_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"additionalColumns": [
												{
													"name": "SiteCode",
													"value": {
														"value": "@{substring(item().name,0,indexOf(item().name,'_'))}",
														"type": "Expression"
													}
												},
												{
													"name": "Direction",
													"value": {
														"value": "Inbound",
														"type": "Expression"
													}
												},
												{
													"name": "CreatedOn",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												},
												{
													"name": "FileName",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "InterfaceCode",
													"value": {
														"value": "IBWCREC",
														"type": "Expression"
													}
												},
												{
													"name": "MessageType",
													"value": {
														"value": "Recon",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['Order_Date']"
													},
													"sink": {
														"name": "Order_Date",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['Order_Status']"
													},
													"sink": {
														"name": "Order_Status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Order_Number']"
													},
													"sink": {
														"name": "Order_Number",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['SiteCode']"
													},
													"sink": {
														"name": "SiteCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['Direction']"
													},
													"sink": {
														"name": "Direction",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['CreatedOn']"
													},
													"sink": {
														"name": "CreatedOn",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['FileName']"
													},
													"sink": {
														"name": "FileName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['InterfaceCode']"
													},
													"sink": {
														"name": "InterfaceCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['MessageType']"
													},
													"sink": {
														"name": "MessageType",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['Orders']['Order']"
										}
									},
									"inputs": [
										{
											"referenceName": "Storage_IB_Rec_Drop_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Container": "ibrecinprocess",
												"Directory": "/",
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Tab_DEX_Rec_Interface_Document",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Reconciliation"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Rec_Data_From_Tanologist_FTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Interface Info IBWCREC",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Recon Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DI.InterfaceCode, DI.[Enabled], DI.[Type], DI.[Direction], DI.[FTPDropDir], DI.FTPProcessedDir \nFROM dbo.DEX_Interface DI\nWHERE InterfaceCode = 'IBWCREC'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Interface",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "GET WC Order Files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Interface Info IBWCREC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Tanologist_SFTP",
								"type": "DatasetReference",
								"parameters": {
									"FolderName": {
										"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPDropDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "SftpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "For Each Order File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET WC Order Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET WC Order Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Load_Interface_Files_From_WC",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Load_Interface_Files_From_WC]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Tab_DEX_Interface_Files",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Copy WC Order File to Azure Blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Load_Interface_Files_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Tanologist_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FtpDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_IB_Drop_Folder_Blob",
											"type": "DatasetReference",
											"parameters": {
												"Container": "/",
												"Directory": "ibrecdrop",
												"filename": "*"
											}
										}
									]
								},
								{
									"name": "Update_Downloaded_File_From_WC",
									"description": "Update Downloaded File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy WC Order File to Azure Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Downloaded_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Move_Files_To_InProcess_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update_Downloaded_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibrecdrop",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibrecinprocess",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Move_Files_To_Processed_In_Blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Copy Rec Data From Blob To DB",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Move_Files",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Location": "/",
											"SourceStore_Directory": "ibrecinprocess",
											"DestinationStore_Location": "/",
											"DestinationStore_Directory": "ibrecprocessed",
											"FileName": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Update_Processed_File_From_WC",
									"description": "Update Processed File From WC in Interface Files Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Move_Files_To_Processed_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Processed_File_From_WC]",
										"storedProcedureParameters": {
											"FileID": {
												"value": {
													"value": "@activity('Load_Interface_Files_From_WC').output.firstRow.NewFileID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SFTP Move WC Orders to Processed",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update_Processed_File_From_WC",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "/wc/Outbound/Drop/"
										},
										{
											"name": "Destination",
											"value": "drop//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "SftpWriteSettings",
												"operationTimeout": "01:00:00",
												"useTempFileRename": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Tanologist_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Tanologist_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPProcessedDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Orders File From OBDrop",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "SFTP Move WC Orders to Processed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Tanologist_SFTP_Connection_With_FileName",
											"type": "DatasetReference",
											"parameters": {
												"FolderName": {
													"value": "@activity('Get Interface Info IBWCREC').output.value[0].FTPDropDir",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Copy Rec Data From Blob To DB",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Move_Files_To_InProcess_In_Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "XmlSource",
											"additionalColumns": [
												{
													"name": "SiteCode",
													"value": {
														"value": "@{substring(item().name,0,indexOf(item().name,'_'))}",
														"type": "Expression"
													}
												},
												{
													"name": "Direction",
													"value": {
														"value": "Inbound",
														"type": "Expression"
													}
												},
												{
													"name": "CreatedOn",
													"value": {
														"value": "@utcnow()",
														"type": "Expression"
													}
												},
												{
													"name": "FileName",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "InterfaceCode",
													"value": {
														"value": "IBWCREC",
														"type": "Expression"
													}
												},
												{
													"name": "MessageType",
													"value": {
														"value": "Recon",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "XmlReadSettings",
												"validationMode": "none",
												"namespaces": true
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['Order_Date']"
													},
													"sink": {
														"name": "Order_Date",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['Order_Status']"
													},
													"sink": {
														"name": "Order_Status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Order_Number']"
													},
													"sink": {
														"name": "Order_Number",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['SiteCode']"
													},
													"sink": {
														"name": "SiteCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['Direction']"
													},
													"sink": {
														"name": "Direction",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['CreatedOn']"
													},
													"sink": {
														"name": "CreatedOn",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['FileName']"
													},
													"sink": {
														"name": "FileName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['InterfaceCode']"
													},
													"sink": {
														"name": "InterfaceCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['MessageType']"
													},
													"sink": {
														"name": "MessageType",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['Orders']['Order']"
										}
									},
									"inputs": [
										{
											"referenceName": "Storage_IB_Rec_Drop_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Container": "ibrecinprocess",
												"Directory": "/",
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Tab_DEX_Rec_Interface_Document",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Truncate Recon Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Truncate_Rec_Tables]"
						},
						"linkedServiceName": {
							"referenceName": "DEXInterfaceProd",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Reconciliation"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Save_Rec_Data_To_DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get SiteCodes",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT distinct SiteCode \nfrom DEX_Rec_Interface_Document",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Rec_Interface_Document",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach SiteCode",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get SiteCodes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get SiteCodes').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get Matched Orders",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Get_Matched_Recon_Order_Numbers]",
											"storedProcedureParameters": {
												"SiteCode": {
													"type": "String",
													"value": {
														"value": "@item().SiteCode",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "Tab_DEX_Rec_Interface_Document",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Save_Rec_Data_To_DB_Internal",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Get Matched Orders",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Save_Rec_Data_To_DB_Internal",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"MatchedOrdersArray": {
												"value": "@activity('Get Matched Orders').output.value",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Truncate_DEX_Rec_Interface_Shipment_Order",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Save_Rec_Data_To_DB_Internal",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Truncate_DEX_Rec_Interface_Shipment_Order]"
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Reconciliation"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Send_Data_To_WC_ILG_Internal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Outbound Document",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Outbound Documents",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Outbound Documents').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Update Exported Messages",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Export Message to BS_SO",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Exported_Message]",
										"storedProcedureParameters": {
											"MessageID": {
												"value": {
													"value": "@item().MessageID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Export Message to BS_SO",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.BC_Inbound_Documents"
										},
										{
											"name": "Destination",
											"value": "obdrop//@{\nreplace(\nconcat(item().SiteCode,'_',item().MessageType,'_',formatDateTime(utcNow(),'yyyyMMddhhmmss')),' ','')\n\n}.xml\n"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[Get_OutBound_Msg_Detail_Csv]",
											"storedProcedureParameters": {
												"MessageID": {
													"type": "Int32",
													"value": {
														"value": "@item().MessageID",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "FileDataCsv",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Tab_BC_Inb_Docs",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_Save_OB_File_In_Blob_CSV",
											"type": "DatasetReference",
											"parameters": {
												"SiteCode": {
													"value": "@item().SiteCode",
													"type": "Expression"
												},
												"MessageType": {
													"value": "@item().MessageType",
													"type": "Expression"
												},
												"MessageId": {
													"value": "@item().MessageID",
													"type": "Expression"
												},
												"container": "obdrop"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get Outbound Documents",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT TOP 1000\n\t\tMessageID, SiteCode, MessageType, FileDataCsv,InterfaceCode\n\tFROM \n\t\tDEX_Interface_Document \n\tWHERE \n\t\tDirection = 'Outbound'  and Exported = 0 and InterfaceCode= '@{pipeline().parameters.InterfaceCode}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_Dex_Interface_Document",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Upload_Files_To_WC_ILG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "For Each Outbound Document",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Upload_Files_To_WC_ILG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Interface_Code": {
									"value": "@pipeline().parameters.InterfaceCode",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"InterfaceCode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ILG Confirmations"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-26T15:43:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Send_Data_To_WC_Internal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Outbound Document",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Outbound Documents",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Outbound Documents').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Export Message to BS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.BC_Inbound_Documents"
										},
										{
											"name": "Destination",
											"value": "obdrop//@{\nreplace(\nconcat(item().SiteCode,'_',item().MessageType,'_',formatDateTime(utcNow(),'yyyyMMddhhmmss')),' ','')\n\n}.xml\n"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "dbo.Get_OutBound_Msg_Detail",
											"storedProcedureParameters": {
												"MessageID": {
													"type": "Int32",
													"value": {
														"value": "@item().MessageID",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "FileData",
														"type": "String",
														"physicalType": "xml"
													},
													"sink": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Tab_BC_Inb_Docs",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Storage_Save_OB_File_In_Blob",
											"type": "DatasetReference",
											"parameters": {
												"SiteCode": {
													"value": "@item().SiteCode",
													"type": "Expression"
												},
												"MessageType": {
													"value": "@item().MessageType",
													"type": "Expression"
												},
												"MessageId": {
													"value": "@item().MessageID",
													"type": "Expression"
												},
												"Container": "obdrop"
											}
										}
									]
								},
								{
									"name": "Update Exported Messages",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Export Message to BS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_Exported_Message]",
										"storedProcedureParameters": {
											"MessageID": {
												"value": {
													"value": "@item().MessageID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DEXInterfaceProd",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Get Outbound Documents",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT TOP 1000\n\t\tMessageID, SiteCode, MessageType, FileData,InterfaceCode\n\tFROM \n\t\tDEX_Interface_Document \n\tWHERE \n\t\tDirection = 'Outbound'  and Exported = 0 and InterfaceCode= '@{pipeline().parameters.InterfaceCode}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_Dex_Interface_Document",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Upload_Files_To_WC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "For Each Outbound Document",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Upload_Files_To_WC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Interface_Code": {
									"value": "@pipeline().parameters.InterfaceCode",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"InterfaceCode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Ecom"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-26T15:43:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master_Cycle_EDI_Internal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_Conf_From_EDI_FTP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Get_Conf_From_EDI_FTP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send_Conf_To_BC_EDI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get_Conf_From_EDI_FTP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send_Conf_To_BC_EDI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "EDI Confirmations"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master_Process_Rec_Internal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Save_Rec_Data_To_DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get_Rec_Data_From_IOP_FTP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Save_Rec_Data_To_DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Get_Rec_Data_From_Byoma_FTP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get_Rec_Data_From_Tanologist_FTP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Get_Rec_Data_From_Byoma_FTP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send_Rec_File_To_BS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Save_Rec_Data_To_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send_Rec_File_To_BS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Upload_Rec_File_To_WC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send_Rec_File_To_BS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Upload_Rec_File_To_WC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Get_Rec_Data_From_Tanologist_FTP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Get_Rec_Data_From_Tanologist_FTP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Get_Rec_Data_From_Tanluxe_FTP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get_Rec_Data_From_Byoma_FTP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Get_Rec_Data_From_Tanluxe_FTP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Get_Rec_Data_From_IOP_FTP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get_Rec_Data_From_Tanluxe_FTP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Get_Rec_Data_From_IOP_FTP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Reconciliation"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Save_Rec_Data_To_DB')]",
				"[concat(variables('factoryId'), '/pipelines/Get_Rec_Data_From_Byoma_FTP')]",
				"[concat(variables('factoryId'), '/pipelines/Get_Rec_Data_From_Tanologist_FTP')]",
				"[concat(variables('factoryId'), '/pipelines/Get_Rec_Data_From_Tanluxe_FTP')]",
				"[concat(variables('factoryId'), '/pipelines/Get_Rec_Data_From_IOP_FTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Send_Data_To_WC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Outbound Interfaces List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT InterfaceCode \nFROM Dex_Interface  \nWHERE [Enabled] = 1 AND Direction = 'Outbound' \n\t  AND InterfaceCode IN ('OBWCINV','OBWCORDCON','OBWCSHIP')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_BC_Inb_Docs",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Interface",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Outbound Interfaces List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Outbound Interfaces List').output.Value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Send_Data_To_WC_Internal",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send_Data_To_WC_Internal",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceCode": {
												"value": "@item().InterfaceCode",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Ecom"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-27T03:06:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Send_Data_To_WC_Internal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Send_Data_To_WC_ILG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Outbound Interfaces List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT InterfaceCode \nFROM Dex_Interface  \nWHERE [Enabled] = 1 AND Direction = 'Outbound' \n\t  AND InterfaceCode IN ('OBILGSO','OBILGPO','OBILGMD')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_BC_Inb_Docs",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Interface",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Outbound Interfaces List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Outbound Interfaces List').output.Value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Send_Data_To_WC_ILG_Internal",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send_Data_To_WC_ILG_Internal",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceCode": {
												"value": "@item().InterfaceCode",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ILG Confirmations"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-27T03:06:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Send_Data_To_WC_ILG_Internal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_Delete_Older_Files')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Delete_Older_Files_From_Blob",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-01-05T12:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master_Cycle_EDI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_BC_Access_Token",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get_Oauth_Service_Configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@activity('Get_Oauth_Service_Configuration').output.firstRow.ServiceURL",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-type": {
									"value": "@activity('Get_Oauth_Service_Configuration').output.firstRow.ContentType",
									"type": "Expression"
								}
							},
							"body": {
								"value": "grant_type=@{activity('Get_Oauth_Service_Configuration').output.firstRow.GrantType}\n&client_id=@{activity('Get_Oauth_Service_Configuration').output.firstRow.ClientID}\n&client_secret=@{activity('Get_Oauth_Service_Configuration').output.firstRow.ClientSecret}\n&scope=@{activity('Get_Oauth_Service_Configuration').output.firstRow.Scope}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get_Oauth_Service_Configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Get_Oauth_Service_Configuration]",
								"storedProcedureParameters": {
									"ServiceCode": {
										"type": "String",
										"value": "GetOauthConfig"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Oauth_Config",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Update_Oauth_Access_Token_DB",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get_BC_Access_Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Update_Oauth_Access_Token_EDI]",
							"storedProcedureParameters": {
								"AccessToken": {
									"value": {
										"value": "@activity('Get_BC_Access_Token').output.access_token",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DEXInterfaceProd",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Send Failure Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Master_Cycle_EDI_Internal",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-26.uksouth.logic.azure.com:443/workflows/660cbc90a51a40dab53e76f370f74e70/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=rslDaEeWOQuFduFl-Q7zq0CcPvzeZBaVvKrOXGfeAak",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"title\": \"@{activity('Master_Cycle_EDI_Internal').output.pipelineName} FAILED!\",\n    \"message\": \"Error: @{activity('Master_Cycle_EDI_Internal').error.message}\",\n    \"color\": \"Red\",\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"pipelineName\": \"@{activity('Master_Cycle_EDI_Internal').output.pipelineName}\",\n    \"pipelineRunId\": \"@{activity('Master_Cycle_EDI_Internal').output.pipelineRunId}\",\n    \"time\": \"@{utcnow()}\",\n   \"recipientEmailAddress\":\"@{activity('GetEmailList').output.firstRow.InterfaceFailureAlertEmails}\"\n    }",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetEmailList",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT InterfaceSuccessAlertEmails,InterfaceFailureAlertEmails FROM dbo.DEX_Interface_Setup",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Tab_DEX_Interface_Setup",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Master_Cycle_EDI_Internal",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Update_Oauth_Access_Token_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetEmailList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Master_Cycle_EDI_Internal",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "EDI Confirmations"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Master_Cycle_EDI_Internal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master_Cycle_ILG_Internal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Send_Data_To_WC_ILG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Update_ILG_BC_Message_Queue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send_Data_To_WC_ILG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Update_ILG_BC_Message_Queue",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get_Conf_Data_From_BC_ILG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Update_ILG_BC_Message_Queue",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Get_Conf_From_ILG_FTP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Get_Conf_From_ILG_FTP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send_Conf_To_BC_ILG",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get_Conf_From_ILG_FTP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send_Conf_To_BC_ILG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Get_Conf_Data_From_BC_ILG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Get_Conf_Data_From_BC_ILG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ILG Confirmations"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Send_Data_To_WC_ILG')]"
			]
		}
	]
}